<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="CheckListNotes.Pages.CheckListPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behavior="clr-namespace:CheckListNotes.Pages.Behaviors"
    xmlns:c="clr-namespace:CheckListNotes.PageModels.Converters"
    xmlns:tvs="clr-namespace:Xam.Plugin.TabView;assembly=Xam.Plugin.TabView"
    xmlns:uc="clr-namespace:CheckListNotes.Pages.UserControls">

    <!--#region Resources-->
    <ContentPage.Resources>
        <ResourceDictionary>
            <c:InverseBoolConverter x:Key="InverseBool" />
            <c:StringToBoolConverter x:Key="StringToBool" />
            <c:StringToColorConverter x:Key="StringToColor" />
            <c:SelectedItemEventArgsToSelectedItemConverter x:Key="SelectedItemToCommandParameter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <!--#endregion-->

    <ContentPage.Content>
        <Grid BackgroundColor="{Binding AppBackgroundColor, Converter={x:StaticResource StringToColor}}" RowSpacing="0">
            <!--#region Rows-->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!--#endregion-->

            <!--#region Header-->
            <Grid BackgroundColor="{Binding HeaderAndHeaderAndFooterBackgroundColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}">
                <!--#region Columns-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!--#endregion-->

                <Button
                    BackgroundColor="{Binding ButtonBackgroundColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}"
                    Command="{Binding GoBack}"
                    Text="Back"
                    TextColor="{Binding AppFontColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}" />
                <Label
                    Grid.ColumnSpan="3"
                    Margin="0,10"
                    HorizontalOptions="FillAndExpand"
                    HorizontalTextAlignment="Center"
                    LineBreakMode="TailTruncation"
                    Text="{Binding PageTitle}"
                    TextColor="{Binding AppFontColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}" />
                <Button
                    Grid.Column="2"
                    BackgroundColor="{Binding ButtonBackgroundColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}"
                    Command="{Binding GoToOptions}"
                    Text="Opt"
                    TextColor="{Binding AppFontColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}" />
            </Grid>
            <!--#endregion-->

            <!--#region Body-->
            <Grid Grid.Row="1" RowSpacing="0">
                <!--#region Rows-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--#endregion-->

                <!--#region Content-->
                <uc:TabViewControlExtended
                    Grid.RowSpan="1"
                    CurrentIndex="{Binding TabIndex}"
                    HeaderBackgroundColor="Black"
                    HeaderSelectionUnderlineColor="Blue"
                    HeaderTabTextColor="White"
                    HeaderTabTextFontAttributes="Bold">
                    <uc:TabViewControlExtended.ItemSource>
                        <tvs:TabItem x:Name="TabItemPendientTask">
                            <ListView
                                HasUnevenRows="true"
                                ItemsSource="{Binding Tasks}"
                                SelectedItem="{Binding SelectedTask}">
                                <ListView.Behaviors>
                                    <behavior:EventToCommandBehavior
                                        Command="{Binding UpdateOrRemove}"
                                        Converter="{x:StaticResource SelectedItemToCommandParameter}"
                                        EventName="ItemSelected" />
                                    <behavior:ListViewCorrectDeselectItemBehavior />
                                </ListView.Behaviors>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <uc:TaskCell />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </tvs:TabItem>
                        <tvs:TabItem x:Name="TabItemCompletedTask">
                            <ListView
                                HasUnevenRows="true"
                                ItemsSource="{Binding CheckedTasks}"
                                SelectedItem="{Binding SelectedTask}">
                                <ListView.Behaviors>
                                    <behavior:EventToCommandBehavior
                                        Command="{Binding UpdateOrRemove}"
                                        Converter="{x:StaticResource SelectedItemToCommandParameter}"
                                        EventName="ItemSelected" />
                                    <behavior:ListViewCorrectDeselectItemBehavior />
                                </ListView.Behaviors>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <uc:TaskCell />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </tvs:TabItem>
                    </uc:TabViewControlExtended.ItemSource>
                </uc:TabViewControlExtended>
                <!--#endregion-->

                <!--#region Footer-->
                <StackLayout
                    Grid.Row="1"
                    Padding="10,5"
                    BackgroundColor="{Binding HeaderAndFooterBackgroundColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}">
                    <Button
                        BackgroundColor="{Binding ButtonBackgroundColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}"
                        Command="{Binding AddNewTask}"
                        IsTabStop="False"
                        Text="{DynamicResource TaskListButtonNewTaskText}"
                        TextColor="{Binding AppFontColor, Converter={x:StaticResource StringToColor}, Mode=OneWay}" />
                </StackLayout>
                <!--#endregion-->
            </Grid>
            <!--#endregion-->
        </Grid>
    </ContentPage.Content>
</ContentPage>
